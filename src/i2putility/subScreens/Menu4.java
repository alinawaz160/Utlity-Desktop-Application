/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package i2putility.subScreens;

import java.awt.Color;
import java.io.BufferedReader;
import i2putility.components.RoundedPanel;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author Alee
 */
public class Menu4 extends javax.swing.JInternalFrame {

    Color DefaultColor,HoveredColor; 
    public Menu4() {
        initComponents();
        this.setBorder(BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        
        DefaultColor=new Color(54,70,78);
        HoveredColor = new Color(240,151,70);
        
        logs.setBackground(DefaultColor);
        backupfile.setBackground(DefaultColor);
        hostFile.setBackground(DefaultColor);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logs = new RoundedPanel(50);
        stopTomcat1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        backupfile = new RoundedPanel(50);
        stopTomcat = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        browserLabel = new javax.swing.JLabel();
        hostFile = new RoundedPanel(50);
        jLabel3 = new javax.swing.JLabel();
        stopTomcat2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(770, 510));

        logs.setBackground(new java.awt.Color(54, 70, 78));
        logs.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                logsMouseMoved(evt);
            }
        });
        logs.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                logsMouseWheelMoved(evt);
            }
        });
        logs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logsMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logsMouseExited(evt);
            }
        });

        stopTomcat1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stopTomcat1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-edit-property-64.png"))); // NOI18N
        stopTomcat1.setPreferredSize(new java.awt.Dimension(129, 129));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Logs");

        javax.swing.GroupLayout logsLayout = new javax.swing.GroupLayout(logs);
        logs.setLayout(logsLayout);
        logsLayout.setHorizontalGroup(
            logsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logsLayout.createSequentialGroup()
                .addGroup(logsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(logsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(stopTomcat1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(logsLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        logsLayout.setVerticalGroup(
            logsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logsLayout.createSequentialGroup()
                .addComponent(stopTomcat1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addContainerGap())
        );

        backupfile.setBackground(new java.awt.Color(54, 70, 78));
        backupfile.setPreferredSize(new java.awt.Dimension(129, 129));
        backupfile.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                backupfileMouseMoved(evt);
            }
        });
        backupfile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backupfileMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backupfileMouseExited(evt);
            }
        });

        stopTomcat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stopTomcat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-view-64.png"))); // NOI18N
        stopTomcat.setPreferredSize(new java.awt.Dimension(129, 129));

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Backup File");

        javax.swing.GroupLayout backupfileLayout = new javax.swing.GroupLayout(backupfile);
        backupfile.setLayout(backupfileLayout);
        backupfileLayout.setHorizontalGroup(
            backupfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backupfileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stopTomcat, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backupfileLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        backupfileLayout.setVerticalGroup(
            backupfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backupfileLayout.createSequentialGroup()
                .addComponent(stopTomcat, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        browserLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        hostFile.setBackground(new java.awt.Color(54, 70, 78));
        hostFile.setPreferredSize(new java.awt.Dimension(129, 129));
        hostFile.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                hostFileMouseMoved(evt);
            }
        });
        hostFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hostFileMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hostFileMouseExited(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Host File");

        stopTomcat2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stopTomcat2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-file-96.png"))); // NOI18N
        stopTomcat2.setPreferredSize(new java.awt.Dimension(129, 129));

        javax.swing.GroupLayout hostFileLayout = new javax.swing.GroupLayout(hostFile);
        hostFile.setLayout(hostFileLayout);
        hostFileLayout.setHorizontalGroup(
            hostFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hostFileLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(hostFileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stopTomcat2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        hostFileLayout.setVerticalGroup(
            hostFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hostFileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stopTomcat2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(logs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99)
                .addComponent(backupfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(hostFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(117, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(browserLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backupfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hostFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addComponent(browserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logsMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logsMouseMoved
        logs.setBackground(HoveredColor);
    }//GEN-LAST:event_logsMouseMoved

    private void logsMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_logsMouseWheelMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_logsMouseWheelMoved

    private void logsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logsMouseExited
        logs.setBackground(DefaultColor);
    }//GEN-LAST:event_logsMouseExited

    private void backupfileMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backupfileMouseMoved
        backupfile.setBackground(HoveredColor);
    }//GEN-LAST:event_backupfileMouseMoved

    private void backupfileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backupfileMouseExited
        backupfile.setBackground(DefaultColor);
    }//GEN-LAST:event_backupfileMouseExited

    private void logsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logsMouseClicked
        final JFileChooser fc = new JFileChooser("C:/logs/pos/");
        int returnValue = fc.showOpenDialog(new JPanel());
        
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            String selectedFile = fc.getSelectedFile().getName();
            try {
                fileExecutor("C:/logs/pos/",selectedFile);
            } catch (Exception ex) {
                Logger.getLogger(Menu4.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_logsMouseClicked

    private void backupfileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backupfileMouseClicked
        
    final JFileChooser fc = new JFileChooser("C:/I2p/apache-tomcat-9.0.52/");
    int returnValue = fc.showOpenDialog(new JPanel());

    if (returnValue == JFileChooser.APPROVE_OPTION) {
        String selectedFile = fc.getSelectedFile().getName();
        try {
            fileExecutor("C:/I2p/apache-tomcat-9.0.52/",selectedFile);
        } catch (Exception ex) {
            Logger.getLogger(Menu4.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    }//GEN-LAST:event_backupfileMouseClicked

    private void hostFileMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hostFileMouseMoved
        hostFile.setBackground(HoveredColor);
    }//GEN-LAST:event_hostFileMouseMoved

    private void hostFileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hostFileMouseExited
        hostFile.setBackground(DefaultColor);
    }//GEN-LAST:event_hostFileMouseExited

    private void hostFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hostFileMouseClicked
        try {
            fileExecutor("C:\\Windows\\System32\\drivers\\etc\\", "hosts");
             } catch (Exception ex) {
            Logger.getLogger(Menu4.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_hostFileMouseClicked

    private Boolean fileExecutor(String directoryPath,String fileName)throws Exception{
        
        directoryPath = directoryPath + fileName;
        File file = new File(directoryPath);
        
        // Check if the file exists and is a file (not a directory)
        if (file.exists() && file.isFile()) {
            // Open the file with the default text editor (Notepad)
            openWithNotepad(file);
        } else {
            browserLabel.setText("An error occurred while opening the file: ");
        }
        return true;
    }
     private void openWithNotepad(File file) {
        try {
            // Check if Desktop is supported on the current platform
            if (Desktop.isDesktopSupported()) {
                Desktop desktop = Desktop.getDesktop();
                if(file.getName().contains("hosts") || file.getName().contains("log")){
                    desktop.open(file);
                }
                else{
                    desktop.edit(file);
                }
            } else {
                browserLabel.setText("Desktop is not supported on this platform.");
            }
        } catch (IOException e) {
            browserLabel.setText("An error occurred while opening the file: " + e.getMessage());
        }
     }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backupfile;
    private javax.swing.JLabel browserLabel;
    private javax.swing.JPanel hostFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel logs;
    private javax.swing.JLabel stopTomcat;
    private javax.swing.JLabel stopTomcat1;
    private javax.swing.JLabel stopTomcat2;
    // End of variables declaration//GEN-END:variables
}
